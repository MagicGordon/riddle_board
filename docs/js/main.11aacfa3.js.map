{"version":3,"file":"js/main.11aacfa3.js","mappings":"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","sources":["webpack://riddle_board/./src/components/Header/index.tsx","webpack://riddle_board/./src/views/Home/Table/index.tsx","webpack://riddle_board/./src/views/Home/Dialog/index.tsx","webpack://riddle_board/./src/views/Home/index.tsx","webpack://riddle_board/./src/App.tsx","webpack://riddle_board/./src/main.tsx"],"sourcesContent":["import React from 'react'\n\nimport { AppBar, Toolbar, Box } from '@mui/material'\n\nimport { ConnectButton } from '@mysten/wallet-kit'\n\nimport './index.less'\n\nexport default (): JSX.Element => {\n  return (\n    <AppBar>\n      <Toolbar>\n        <Box sx={{ flexGrow: 1 }} />\n        <ConnectButton className=\"header_connect\" />\n      </Toolbar>\n    </AppBar>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TextField,\n  Button,\n} from '@mui/material'\n\nimport { useWalletKit } from '@mysten/wallet-kit'\n\nexport default ({ rows, submit }: any): JSX.Element => {\n  const { isConnected } = useWalletKit()\n\n  const [text, setText] = useState<any>({})\n\n  const handleText = (event: any, key: any) => {\n    const _text = { ...text }\n    _text[key] = event.target.value\n    setText(_text)\n  }\n\n  const handleSubmit = (key: string) => {\n    submit(key, text[key])\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>commitment</TableCell>\n            <TableCell>reward(SUI)</TableCell>\n            <TableCell>proof</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row: any, index: number) => {\n            const { name, value } = row.details.data.fields\n            const { data } = name.fields\n            let key = '0x'\n            data.forEach((item: string) => {\n              const str = item.toString(16)\n              key += str.length === 1 ? `0${str}` : str\n            })\n            return (\n              <TableRow\n                key={index}\n                // sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell>{key}</TableCell>\n                <TableCell>{value}</TableCell>\n                <TableCell>\n                  <TextField\n                    variant=\"standard\"\n                    onChange={(e) => handleText(e, key)}\n                  />\n                </TableCell>\n                <TableCell>\n                  <Button\n                    disabled={!isConnected}\n                    onClick={() => handleSubmit(key)}\n                  >\n                    submit\n                  </Button>\n                </TableCell>\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n} from '@mui/material'\n\nimport { JsonRpcProvider, Network } from '@mysten/sui.js'\n\nimport { useWalletKit } from '@mysten/wallet-kit'\n\nexport default ({ open, setOpen, addRiddle }: any): JSX.Element => {\n  const network = Network.DEVNET\n  const provider = new JsonRpcProvider(network)\n\n  const { currentAccount } = useWalletKit()\n\n  const [key, setKey] = useState('')\n\n  const [loading, setLoading] = useState(false)\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleSubmit = async () => {\n    setLoading(true)\n    const results: any[] = []\n    const coins = await provider.getObjectsOwnedByAddress(currentAccount!)\n    coins.forEach((coin) => results.push(provider.getObject(coin.objectId)))\n\n    const res = await Promise.all(results)\n\n    const consumption = res.find(\n      (item, index) =>\n        index > 0 && item.details.data.fields.balance === '10000000'\n    )\n\n    setLoading(false)\n    addRiddle(\n      key,\n      consumption ? consumption.details.data.fields.id.id : undefined\n    )\n  }\n\n  return (\n    <>\n      <Dialog open={open} onClose={handleClose} fullWidth >\n        <DialogTitle>Add Riddle</DialogTitle>\n        <DialogContent>\n          <TextField\n            label=\"commitment\"\n            fullWidth\n            variant=\"standard\"\n            sx={{ mb: 2 }}\n            onChange={(e) => setKey(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button disabled={!currentAccount || loading} onClick={handleSubmit}>\n            Add Riddle\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState, useEffect } from 'react'\n\nimport { Alert, AlertColor, Button, Divider, Snackbar } from '@mui/material'\n\nimport { JsonRpcProvider, Network } from '@mysten/sui.js'\n\nimport { useWalletKit } from '@mysten/wallet-kit'\n\nimport Header from '@components/Header'\nimport Table from './Table'\nimport Dialog from './Dialog'\n\nimport './index.less'\n\nexport default (): JSX.Element => {\n  const { signAndExecuteTransaction } = useWalletKit()\n\n  const network = Network.DEVNET\n  const provider = new JsonRpcProvider(network)\n\n  const [table, setTable] = useState<any>([])\n\n  const [open, setOpen] = useState(false)\n\n  const [severity, setSeverity] = useState<AlertColor>('success')\n  const [text, setText] = useState('')\n\n  const [openDialog, setOpenDialog] = useState(false)\n\n  const init = async () => {\n    setTable([])\n    const results: any[] = []\n    const objects = await provider.getObject(\n      '0xdf04d8d2097409ae5f6d4d736777f66f937ba228'\n    )\n    if (objects.status === 'NotExists') {\n      setSeverity('error')\n      setText('devnet has been updated, please redeploy the contract and modify the frontend config file')\n      return\n    }\n    const { id } = objects.details.data.fields.record.fields.id\n    const { data } = await provider.getDynamicFields(id)\n    data.forEach((item) => results.push(provider.getObject(item.objectId)))\n\n    const _table = await Promise.all(results)\n\n    setTable(_table)\n  }\n\n  const submit = async (key: any, text: any) => {\n    const result = await signAndExecuteTransaction({\n      kind: 'moveCall',\n      data: {\n        packageObjectId: '0x930c1261bb6d5f035348097f2515b03071b42b52',\n        module: 'board',\n        function: 'answer',\n        typeArguments: [],\n        arguments: ['0xdf04d8d2097409ae5f6d4d736777f66f937ba228', key, text],\n        gasBudget: 10000,\n      },\n    })\n\n    const { status } = result.effects.status\n    if (status === 'success') {\n      init()\n      setSeverity('success')\n    } else {\n      setSeverity('error')\n    }\n\n    setText(status)\n\n    setOpen(true)\n\n  }\n\n  const handleClose = (\n    event?: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  const addRiddle = async (commitment: string, consumption: any) => {\n    // 0x0800000000000000000000000000000000000000000000000000000000000000\n    if (!consumption) {\n      setText('Please confirm that there are 10000000 SUI token objects under your account')\n      setSeverity('error')\n      return\n    }\n    const result = await signAndExecuteTransaction({\n      kind: 'moveCall',\n      data: {\n        packageObjectId: '0x930c1261bb6d5f035348097f2515b03071b42b52',\n        module: 'board',\n        function: 'add_riddle',\n        typeArguments: [],\n        arguments: [\n          '0xdf04d8d2097409ae5f6d4d736777f66f937ba228',\n          commitment,\n          consumption,\n        ],\n        gasBudget: 10000,\n      },\n    })\n\n    const { status } = result.effects.status\n    if (status === 'success') {\n      init()\n      setSeverity('success')\n    } else {\n      setSeverity('error')\n    }\n\n    setText(status)\n\n    setOpenDialog(false)\n  }\n\n  useEffect(() => {\n    init()\n  }, [])\n\n  return (\n    <div className=\"home\">\n      <Header />\n      <div className=\"home_content\">\n        <Button variant=\"contained\" onClick={() => setOpenDialog(true)}>\n          add riddle\n        </Button>\n        <Divider sx={{ pt: 1, pb: 1 }} component=\"li\" />\n        <Table rows={table} submit={submit} />\n      </div>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\n          {text}\n        </Alert>\n      </Snackbar>\n      <Dialog open={openDialog} setOpen={setOpenDialog} addRiddle={addRiddle} />\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { WalletKitProvider } from '@mysten/wallet-kit'\n// import '@suiet/wallet-kit/style.css'\n\nimport Home from '@views/Home'\n\nexport default (): JSX.Element => (\n  <WalletKitProvider>\n    <Home />\n  </WalletKitProvider>\n)\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport App from './App'\n\nimport '@css/main.less'\n\nconst root = createRoot(document.getElementById('root') as Element)\n\nroot.render(<App />)\n"],"names":["AppBar","Toolbar","Box","sx","flexGrow","className","rows","submit","isConnected","useWalletKit","useState","text","setText","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","TableCell","TableBody","map","row","index","details","data","fields","name","value","key","forEach","item","str","toString","length","TextField","variant","onChange","e","event","_text","target","handleText","Button","disabled","onClick","handleSubmit","i","open","setOpen","addRiddle","network","Network","provider","JsonRpcProvider","currentAccount","setKey","loading","setLoading","handleClose","results","getObjectsOwnedByAddress","coin","push","getObject","objectId","Promise","all","res","consumption","find","balance","id","undefined","Dialog","onClose","fullWidth","DialogTitle","DialogContent","label","mb","DialogActions","signAndExecuteTransaction","table","setTable","severity","setSeverity","openDialog","setOpenDialog","init","objects","status","record","getDynamicFields","_table","kind","packageObjectId","module","function","typeArguments","arguments","gasBudget","result","effects","reason","commitment","useEffect","Header","Divider","pt","pb","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","width","Home","createRoot","document","getElementById","render","App"],"sourceRoot":""}